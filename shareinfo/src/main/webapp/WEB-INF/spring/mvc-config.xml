<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:oxm="http://www.springframework.org/schema/oxm"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.1.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
        http://www.springframework.org/schema/oxm
        http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd">

	 <context:component-scan base-package="com.jitworks.shareinfo.validator" /> 
	<context:component-scan base-package="com.jitworks.shareinfo.controller" />
	<mvc:annotation-driven />
	

	<!-- all resources inside folder src/main/webapp/resources are mapped so they can be refered to inside JSP files (see header.jsp for more details) -->
	<mvc:resources mapping="/resources/**" location="/resources/" />

	<!-- uses WebJars so Javascript and CSS libs can be declared as Maven dependencies (Bootstrap, jQuery...) -->
	<mvc:resources mapping="/webjars/**" location="classpath:/META-INF/resources/webjars/" />

	<!-- <mvc:view-controller path="/login" view-name="login" /> -->

	<!-- bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean-->
	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="contentNegotiationManager" ref="cnManager" />

		<property name="viewResolvers">
			<list>
				<!-- Default viewClass: JSTL view (JSP with html output) -->
				<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
					<!-- Example: a logical view name of 'vets' is mapped to '/WEB-INF/jsp/vets.jsp' -->
					<property name="prefix" value="/WEB-INF/jsp/" />
					<property name="suffix" value=".jsp" />
				</bean>

				<!-- Used here for 'xml' and 'atom' views -->
				<bean class="org.springframework.web.servlet.view.BeanNameViewResolver" />
			</list>
		</property>
		 <property name="defaultViews">
 			<list>
      				<bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView" >
 				</bean>
		    	</list>
		  </property>
	</bean>

	<!-- Simple strategy: only path extension is taken into account -->
	<bean id="cnManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
		<property name="favorPathExtension" value="true" />
		<property name="ignoreAcceptHeader" value="true" />
		<property name="defaultContentType" value="text/html" />

		<property name="mediaTypes">
			<map>
				<entry key="json" value="application/json" />
				<entry key="html" value="text/html" />
				<entry key="xml" value="application/vnd.oma.dd+xml" />
			</map>
		</property>
	</bean>

	<!-- Renders an XML view. Used by the BeanNameViewResolver -->
	<!--<bean id="dd.xml" class="org.springframework.web.servlet.view.xml.MarshallingView">
		<property name="marshaller" ref="marshaller" />
		<property name="contentType" value="application/vnd.oma.dd+xml" />
	</bean>

	<oxm:jaxb2-marshaller id="marshaller">
		<oxm:class-to-be-bound name="com.jitworks.shareinfo.data.Media" />
	</oxm:jaxb2-marshaller>
-->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- maximum file size: 2GB -->
		<property name="maxUploadSize" value="3221225472" />
	</bean>

	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource" p:basename="messages/messages" />

</beans>